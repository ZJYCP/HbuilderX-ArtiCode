name: Build and Release Frontend

# 定义触发条件
on:
  push:
    branches:
      - main # 当推送到 main 分支时触发构建
  workflow_dispatch: # 允许手动触发 Release

jobs:
  # Job 1: 构建和打包前端
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 根据你的项目调整 Node.js 版本

      # 3. 安装依赖
      - name: Install dependencies
        run: npm install # 如果用 yarn，可以改为 yarn install

      # 4. 构建前端项目
      - name: Build project
        run: npm run build # 根据你的构建命令调整

      # 5. 压缩构建产物为 zip 文件
      - name: Zip build output
        run: zip -r frontend-build.zip dist/ # 假设构建输出在 dist，根据实际调整

      # 6. 上传构建产物作为 artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend-build.zip

  # Job 2: 创建 Release 并上传资产（手动触发）
  release:
    runs-on: ubuntu-latest
    needs: build # 依赖 build job，只有 build 成功后才能执行
    if: github.event_name == 'workflow_dispatch' # 仅在手动触发时运行
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 下载构建的 artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build

      # 3. 创建 GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name || 'v1.0.0' }} # 可手动输入 tag 或默认值
          release_name: Release ${{ github.event.inputs.tag_name || 'v1.0.0' }}
          draft: false
          prerelease: false

      # 4. 上传 zip 文件作为 Release 的 asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./frontend-build.zip
          asset_name: frontend-build-${{ github.event.inputs.tag_name || 'v1.0.0' }}.zip
          asset_content_type: application/zip
